<!--
  Copyright (C) 2009 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:exf="http://www.exforms.org/exf/1-0"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
        >

    <xbl:binding
        id="fr-image-attachment"
        element="fr|image-attachment"
        xxbl:mode="binding lhha value"
        xxbl:container="span">

        <!-- Orbeon Form Builder Component Metadata -->
        <metadata xmlns="http://orbeon.org/oxf/xml/form-builder">
            <display-name lang="en">Image Attachment</display-name>
            <display-name lang="es">Adjuntar Imagen</display-name>
            <display-name lang="fi">Kuvan liittäminen</display-name>
            <display-name lang="fr">Image jointe</display-name>
            <display-name lang="ru">Загрузка изображения</display-name>
            <display-name lang="de">Bild Anhang</display-name>
            <display-name lang="it">Immagine allegata</display-name>
            <display-name lang="sv">Bild som bilaga</display-name>
            <display-name lang="nl">Afbeeldingbijlage</display-name>
            <display-name lang="pt">Anexar imagem</display-name>
            <icon>
                <icon-class>fa fa-fw fa-file-image-o</icon-class>
            </icon>
            <templates>
                <bind type="xf:anyURI" constraint="xxf:upload-mediatypes('image/*')"/>
                <instance filename="" mediatype="" size=""/>
                <view>
                     <fr:image-attachment id="" ref="" class="fr-attachment">
                        <xf:label ref=""/>
                        <xf:hint ref=""/>
                        <xf:help ref=""/>
                        <xf:alert ref=""/>
                    </fr:image-attachment>
                </view>
            </templates>

            <control-details>
                <xf:model xmlns="">

                    <xf:action event="xforms-model-construct-done">
                        <xf:action iterate="instance('local')/*">
                            <xf:var name="c" value="."/>
                            <xf:setvalue
                                ref="$c"
                                value="(instance()/@*[name() = concat('transform-', name($c))], $c/@default)[1]"/>
                        </xf:action>
                    </xf:action>

                    <xf:instance id="local" xxf:exclude-result-prefixes="#all">
                        <_>
                            <max-width  default=""/>
                            <max-height default=""/>
                            <quality    default=""/>
                            <format     default=""/>
                        </_>
                    </xf:instance>

                    <xf:bind ref="instance('local')">
                        <xf:bind
                            ref="max-width | max-height"
                            type="xf:integer"
                            xxf:whitespace="trim"
                            constraint="string(.) = '' or xxf:positive()"/>
                        <xf:bind
                            ref="quality"
                            type="xf:integer"
                            xxf:whitespace="trim"
                            constraint="string(.) = '' or (xxf:positive() and . le 100)"/>
                        <xf:bind
                            ref="format"
                            type="xf:string"/>
                        <xf:bind
                            ref="quality | format"
                            calculate="
                                if (
                                    xxf:is-blank(../max-width/string()) and
                                    xxf:is-blank(../max-height/string())
                                ) then
                                    ''
                                else
                                    ."
                            readonly="
                                xxf:is-blank(../max-width/string()) and
                                xxf:is-blank(../max-height/string())"/>
                    </xf:bind>

                    <xf:instance id="fr-form-resources" xxf:readonly="true" xxf:exclude-result-prefixes="#all">
                        <_>
                            <resource xml:lang="en">
                                <max-width>Adjust to maximum width to</max-width>
                                <max-height>Adjust to maximum height to</max-height>
                                <quality>Compression quality</quality>
                                <format>Resulting image format</format>
                                <preserve>Preserve</preserve>
                            </resource>
                            <resource xml:lang="fr">
                                <max-width>Ajuster la largeur maximale à</max-width>
                                <max-height>Ajuster la hauteur maximale à</max-height>
                                <quality>Qualité de la compression</quality>
                                <format>Format d'image résultant</format>
                                <preserve>Préserver</preserve>
                            </resource>
                        </_>
                    </xf:instance>

                </xf:model>
                <fr:grid xmlns="" id="fb-editor-download-grid">
                    <fr:c x="1" y="1" w="6">
                        <fr:number ref="instance('local')/max-width" id="max-width-control" suffix="px">
                            <xf:label ref="xxf:r('max-width')"/>
                            <xf:alert ref="xxf:r('components.parameters-editor.name.alert', '|fr-form-resources|')"/>
                        </fr:number>
                    </fr:c>
                    <fr:c x="7" y="1" w="6">
                        <fr:number ref="instance('local')/max-height" id="max-height-control" suffix="px">
                            <xf:label ref="xxf:r('max-height')"/>
                            <xf:alert ref="xxf:r('components.parameters-editor.name.alert', '|fr-form-resources|')"/>
                        </fr:number>
                    </fr:c>
                    <fr:c x="1" y="2" w="6">
                        <fr:number
                            ref="instance('local')/quality"
                            id="quality-control"
                            suffix="%"
                            digits-after-decimal="2"
                            round-when-storing="true"
                            round-when-formatting="true">
                            <xf:label ref="xxf:r('quality')"/>
                            <xf:alert ref="xxf:r('components.parameters-editor.name.alert', '|fr-form-resources|')"/>
                        </fr:number>
                    </fr:c>
                    <fr:c x="7" y="2" w="6">
                        <xf:select1 ref="instance('local')/format" id="format-control">
                            <xf:label ref="xxf:r('format')"/>
                            <xf:item>
                                <xf:label ref="xxf:r('preserve')"/>
                                <xf:value/>
                            </xf:item>
                            <xf:item>
                                <xf:label>JPEG</xf:label>
                                <xf:value>jpg</xf:value>
                            </xf:item>
                            <xf:item>
                                <xf:label>PNG</xf:label>
                                <xf:value>png</xf:value>
                            </xf:item>
                        </xf:select1>
                    </fr:c>
                </fr:grid>
                <xf:action
                    id="fb-editor-action"
                    event="xforms-value-changed"
                    observer="
                        max-width-control
                        max-height-control
                        quality-control
                        format-control">

                    <xf:var
                        name="name"
                        value="name(event('xxf:binding'))"/>

                    <xf:var
                        name="new-value"
                        value="
                            let $binding := event('xxf:binding'),
                                $v       := string($binding),
                                $default := $binding/@default/string()
                            return
                                if ($v != $default) then
                                    $v
                                else
                                    ()
                        "/>

                    <xf:insert
                        context="instance()"
                        if="exists($new-value)"
                        origin="
                            xf:attribute(concat('transform-', $name), $new-value)"/>
                    <xf:delete
                        if="empty($new-value)"
                        ref="instance()/@*[name() = concat('transform-', $name)]"/>
                </xf:action>
            </control-details>

        </metadata>

        <xbl:template>
            <xf:var
                name="binding"
                value="xxf:binding('fr-image-attachment')"/>

            <fr:attachment
                ref="$binding"
                accept="{(xxf:custom-mip($binding, 'upload-mediatypes')[xxf:non-blank()], 'image/*')[1]}">

                <xf:filename  ref="@filename"  xxbl:scope="outer"/>
                <xf:mediatype ref="@mediatype" xxbl:scope="outer"/>
                <xxf:size     ref="@size"      xxbl:scope="outer"/>

                <!-- Retarget of upload events -->
                <!-- NOTE: Duplicated logic in attachment.xbl -->
                <xf:dispatch
                    event="xxforms-upload-start xxforms-upload-cancel"
                    targetid="fr-image-attachment"
                    name="{event('xxf:type')}"/>

                <xf:dispatch
                    event="xxforms-upload-done"
                    targetid="fr-image-attachment"
                    name="{event('xxf:type')}"
                    propagate="stop"
                    defaultAction="cancel">
                    <xf:property name="file"           value="event('file')"/>
                    <xf:property name="filename"       value="event('filename')"/>
                    <xf:property name="content-type"   value="event('content-type')"/>
                    <xf:property name="content-length" value="event('content-length')"/>
                </xf:dispatch>

                <xf:dispatch
                    event="xxforms-upload-error"
                    targetid="fr-image-attachment"
                    name="{event('xxf:type')}"
                    propagate="stop"
                    defaultAction="cancel">
                    <xf:property name="error-type" value="event('error-type')"/>
                    <xf:property name="permitted"  value="event('permitted')"/>
                    <xf:property name="actual"     value="event('actual')"/>
                    <xf:property name="message"    value="event('message')"/>
                </xf:dispatch>

                <xf:action
                    event="xxforms-upload-done"
                    if="exists(
                        (
                            fr:component-param-value('transform-max-width'),
                            fr:component-param-value('transform-max-height'),
                            fr:component-param-value('transform-quality'),
                            fr:component-param-value('transform-format')
                        )
                    )"
                    type="xpath">
                    fr:transform-uploaded-image(
                        $binding,
                        fr:component-param-value('transform-max-width'),
                        fr:component-param-value('transform-max-height'),
                        fr:component-param-value('transform-quality'),
                        fr:component-param-value('transform-format')
                    )
                </xf:action>

            </fr:attachment>
            <xf:output mediatype="image/*" ref="$binding[xxf:non-blank()]">
                <xf:filename  ref="@filename"  xxbl:scope="outer"/>
                <xf:mediatype ref="@mediatype" xxbl:scope="outer"/>
                <xf:header ref="fr:attachment-form-version()">
                    <xf:name>Orbeon-Form-Definition-Version</xf:name>
                    <xf:value value="."/>
                </xf:header>
                <xf:header ref="$binding[@fr:attachment-encrypted = 'true']">
                    <xf:name>Orbeon-Decrypt</xf:name>
                    <xf:value>true</xf:value>
                </xf:header>
            </xf:output>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>
