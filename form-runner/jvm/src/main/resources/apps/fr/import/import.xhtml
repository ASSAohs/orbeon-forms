<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xh:html xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:xf="http://www.w3.org/2002/xforms"
      xmlns:ev="http://www.w3.org/2001/xml-events"
      xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:f="http://orbeon.org/oxf/xml/formatting"
      xmlns:xh="http://www.w3.org/1999/xhtml"
      xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      xmlns:fr="http://orbeon.org/oxf/xml/form-runner">

    <xh:head>
        <xh:style>
            .orbeon .fr-status-icons { display: none }
            .orbeon .fb-import-warning { color: #DF731B; display: block }
            .orbeon .fb-import-success { color: green; display: block }
            .orbeon .fb-import-error { color: red; display: block }
            .orbeon .xbl-fr-grid .fr-grid .fr-grid-body .fr-grid-td > .xforms-trigger { display: inline-block; }
        </xh:style>
        <xf:model
            id="fr-form-model"
            xxf:xpath-analysis="true"
            xxf:submission-poll-delay="2000"
            xxf:function-library="org.orbeon.oxf.fr.library.FormRunnerFunctionLibrary">

            <xf:var
                name="allow-invalid-documents"
                value="xxf:property(string-join(('oxf.fr.import.allow-invalid-documents', fr:app-name(), fr:form-name()), '.')) = true()"/>

            <xf:action
                xmlns:frf="java:org.orbeon.oxf.fr.FormRunner"
                xmlns:version="java:org.orbeon.oxf.common.Version"
                event="xforms-model-construct-done"
                if="not(fr:is-pe())"
                type="xpath">

                frf:sendError(404)
            </xf:action>

            <xf:action event="xforms-ready" type="xpath">
                xxf:set-session-attribute('org.orbeon.fr.import.total',     ()),
                xxf:set-session-attribute('org.orbeon.fr.import.processed', ()),
                xxf:set-session-attribute('org.orbeon.fr.import.skipped',   ()),
                xxf:set-session-attribute('org.orbeon.fr.import.cancel',    ())
            </xf:action>

            <!-- Main data -->
            <xf:instance id="fr-form-instance">
                <wizard current="1">
                    <upload>
                        <file mediatype="" filename="" size=""/>
                        <validating>false</validating>
                    </upload>
                    <import>
                        <importing>false</importing>
                        <keep-existing-records>true</keep-existing-records>
                        <import-invalid-data>false</import-invalid-data>
                    </import>
                </wizard>
            </xf:instance>

            <xf:bind ref="instance()">
                <xf:bind ref="upload">
                    <xf:bind ref="file"/>
                </xf:bind>
                <xf:bind ref="import">
                    <xf:bind id="keep-existing-records-bind" ref="keep-existing-records"/>
                    <xf:bind id="import-invalid-data-bind"   ref="import-invalid-data"/>
                </xf:bind>
            </xf:bind>

            <!-- Validation and import status -->
            <xf:var name="validation-done"     context="instance('import-validation-result')" value="exists(*)"/>
            <xf:var name="validation-canceled" context="instance('import-validation-result')" value="$validation-done and total != processed"/>

            <xf:var name="import-done"         context="instance('import-result')" value="exists(*)"/>
            <xf:var name="import-canceled"     context="instance('import-result')" value="$import-done and total != processed"/>

            <xf:instance id="import-validation-result">
                <dummy/>
            </xf:instance>

            <xf:instance id="import-result">
                <dummy/>
            </xf:instance>

            <!-- Validate data to import -->
            <xf:submission
                id="import-validate-submission"
                ref="instance()/upload/file"
                method="post"
                mode="asynchronous"
                action="/fr/service/{fr:app-name()}/{fr:form-name()}/validate"
                replace="instance"
                instance="import-validation-result">

                <!-- Reset stats -->
                <xf:action event="xforms-submit" context="instance('import-batch-stats')">
                    <xf:setvalue iterate="total, processed, succeeded" ref="." value="0"/>
                    <xf:setvalue iterate="progress, start-time, eta"   ref="."/>
                </xf:action>

                <!-- Flag indicating we are validating -->
                <xf:setvalue event="xforms-submit"                          ref="instance()/upload/validating">true</xf:setvalue>
                <xf:setvalue event="xforms-submit-done xforms-submit-error" ref="instance()/upload/validating">false</xf:setvalue>
                <xf:message  event="xforms-submit-error">An error occurred while validating the data.</xf:message>

                <xf:setvalue
                    event="xforms-submit-done"
                    context="instance('import-batch-stats')"
                    iterate="total, processed, succeeded"
                    ref="."
                    value="
                        (
                            xxf:get-session-attribute(concat('org.orbeon.fr.import.', name(.)))[
                                . castable as xs:integer
                            ],
                            0
                        )[1]"/>

                <xf:send
                    event="xforms-submit-done"
                    context="instance('import-validation-result')"
                    if="total = processed"
                    submission="search-submission"/>

            </xf:submission>

            <!-- Import data -->
            <xf:submission
                id="import-import-submission"
                ref="instance()/upload/file"
                method="post"
                mode="asynchronous"
                action="/fr/service/{fr:app-name()}/{fr:form-name()}/import?import-invalid-data={bind('import-invalid-data-bind')}"
                replace="instance"
                instance="import-result">

                <!-- Reset stats -->
                <xf:action event="xforms-submit" context="instance('import-batch-stats')">
                    <xf:setvalue iterate="total, processed, succeeded" ref="." value="0"/>
                    <xf:setvalue iterate="progress, start-time, eta"   ref="."/>
                </xf:action>

                <!-- Import start/end flag -->
                <xf:setvalue event="xforms-submit"                          ref="instance()/import/importing">true</xf:setvalue>
                <xf:setvalue event="xforms-submit-done xforms-submit-error" ref="instance()/import/importing">false</xf:setvalue>

                <!-- Error -->
                <xf:message event="xforms-submit-error">An error occurred while importing the data.</xf:message>
            </xf:submission>

            <!-- Delete all data in the given form -->
            <xf:submission
                id="import-delete-data-submission"
                method="delete"
                serialization="none"
                action="/fr/service/persistence/crud/{fr:app-name()}/{fr:form-name()}/data/"
                replace="none">

                <!-- Start import once data is successfully deleted -->
                <xf:send event="xforms-submit-done" submission="import-import-submission"/>

                <!-- Error -->
                <xf:message event="xforms-submit-error">An error occurred while deleting the data.</xf:message>
            </xf:submission>

            <!-- Statistics gathered upon polling event -->
            <xf:instance id="import-batch-stats" xxf:expose-xpath-types="true">
                <stats>
                    <total>0</total>
                    <processed>0</processed>
                    <succeeded>0</succeeded>
                    <invalid-count>0</invalid-count>
                    <progress/>
                    <start-time/>
                    <eta/>
                </stats>
            </xf:instance>

            <xf:bind ref="instance('import-batch-stats')">
                <xf:bind
                    ref="invalid-count"
                    type="xs:integer"
                    calculate="../processed - ../succeeded"
                    id="invalid-count-bind"/>
                <xf:bind
                    ref="progress"
                    calculate="if (../total != 0) then xs:decimal(../processed) div xs:decimal(../total) else 0"/>
                <xf:bind
                    ref="start-time"
                    calculate="if (. = '' and ../total != 0) then current-dateTime() else ."/>
                <xf:bind
                    ref="eta"
                    calculate="
                        if (../start-time != '' and ../processed != 0 and xs:decimal(../progress) != 0) then
                            (current-dateTime() - xs:dateTime(../start-time)) * ((1.0 - ../progress) div ../progress)
                        else
                            ''"/>
            </xf:bind>

            <!-- Update progress upon poll event -->
            <xf:action
                if="xs:boolean(instance()/upload/validating) or xs:boolean(instance()/import/importing)"
                event="xxforms-poll"
                observer="#document">

                <xf:setvalue
                    context="instance('import-batch-stats')"
                    iterate="total, processed, succeeded"
                    ref="."
                    value="
                        (
                            xxf:get-session-attribute(concat('org.orbeon.fr.import.', name(.)))[
                                . castable as xs:integer
                            ],
                            0
                        )[1]"/>
            </xf:action>

            <!-- Search request -->
            <xf:instance id="import-search-request">
                <search>
                    <!-- Free text search query -->
                    <query/>
                    <!-- Paging -->
                    <page-size>1</page-size>
                    <page-number>1</page-number>
                    <!-- Language -->
                    <lang/>
                </search>
            </xf:instance>

            <!-- Search response -->
            <xf:instance id="import-search-response"><dummy/></xf:instance>

            <!-- Search submission -->
            <xf:submission id="search-submission"
                    ref="instance('import-search-request')" validate="false"
                    method="post" resource="/fr/service/persistence/search/{fr:app-name()}/{fr:form-name()}"
                    replace="instance" instance="import-search-response">
                <!-- Set language upon submitting -->
                <xf:action event="xforms-submit">
                    <xf:setvalue ref="lang" value="xxf:instance('fr-language-instance')"/>
                </xf:action>
                <xf:message event="xforms-submit-error">An error occurred while retrieving the data.</xf:message>
            </xf:submission>

            <!-- Metadata -->
            <xf:instance id="fr-form-metadata" xxf:readonly="true">
                <metadata xmlns="">
                    <application-name>orbeon</application-name>
                    <form-name>runner</form-name>
                    <title>Form Runner Import</title>
                    <description/>
                    <author>Orbeon, Inc.</author>
                    <logo mediatype="" filename="" size=""/>
                </metadata>
            </xf:instance>

            <!-- Standard Form Runner resources instance -->
            <xf:instance id="fr-form-resources">
                <resources xmlns=""/>
            </xf:instance>
        </xf:model>
    </xh:head>
    <xh:body>
        <fr:view>
            <!--<xf:label>Orbeon Form Runner - Import</xf:label>-->
            <fr:body>

                <xf:action event="DOMActivate" observer="next-button">
                    <xf:setvalue ref="instance()/@current" value="xs:integer(instance()/@current) + 1"/>
                    <xf:refresh/>
                    <xf:dispatch name="fr-toggle" targetid="import-step-{instance()/@current}"/>
                </xf:action>

                <xf:action event="DOMActivate" observer="previous-button">
                    <xf:setvalue ref="instance()/@current" value="xs:integer(instance()/@current) - 1"/>
                    <xf:refresh/>
                    <xf:dispatch name="fr-toggle" targetid="import-step-{instance()/@current}"/>
                </xf:action>

                <xf:action event="DOMActivate" observer="next-button" if="instance()/@current = 1">
                    <xf:action type="application/xpath">
                        xxf:set-session-attribute('org.orbeon.fr.import.total', ()),
                        xxf:set-session-attribute('org.orbeon.fr.import.processed', ()),
                        xxf:set-session-attribute('org.orbeon.fr.import.succeeded', ()),
                        xxf:set-session-attribute('org.orbeon.fr.import.cancel', ())
                    </xf:action>
                </xf:action>

                <fr:section id="upload-validate-section" ref="instance()/upload">
                    <xf:label>Selection and validation</xf:label>:label>

                    <xf:var name="tab" value="."/>
                    <xf:var name="validating" value="xs:boolean($tab/validating)"/>

                    <xf:group ref="$tab/file[not(normalize-space())]">
                        <fr:grid>
                            <xh:tr>
                                <xh:td colspan="3">

                                    <xf:upload ref=".">
                                        <xf:label>Select a file to import:</xf:label>
                                        <xf:hint>File can be an Excel 2007 (.xlsx) or a plain zip archive of XML documents</xf:hint>
                                        <xf:alert/>

                                        <xf:filename ref="@filename"/>
                                        <xf:mediatype ref="@mediatype"/>
                                        <xxf:size ref="@size"/>

                                        <!-- Start validation once the file is uploaded -->
                                        <xf:send event="xxforms-upload-done" submission="import-validate-submission"/>

                                    </xf:upload>

                                </xh:td>
                            </xh:tr>
                        </fr:grid>
                    </xf:group>


                    <xf:group ref="$tab/file[normalize-space()]">
                        <fr:grid>
                            <xh:tr>
                                <xh:td>
                                    <xf:output ref="@filename">
                                        <xf:label>File name:</xf:label>
                                    </xf:output>
                                </xh:td>
                                <xh:td>
                                    <xf:output value="format-number(@size, '#,###')">
                                        <xf:label>Size:</xf:label>
                                    </xf:output>
                                </xh:td>
                            </xh:tr>
                        </fr:grid>
                    </xf:group>

                    <xf:group ref=".[$validating]">
                        <fr:grid>
                            <xh:tr>
                                <xh:td>
                                    <!-- Progress status -->
                                    <xf:group>
                                        <xf:label>Validating:</xf:label>
                                        <xh:div class="progress progress-striped">
                                            <xh:div class="bar" style="width: {format-number(instance('import-batch-stats')/progress, '###%')}"/>
                                        </xh:div>
                                    </xf:group>
                                </xh:td>
                                <xh:td>
                                    <xf:output
                                        value="
                                            for $ds in instance('import-batch-stats')/eta
                                            return
                                                if ($ds castable as xs:dayTimeDuration) then
                                                    for $d in xs:dayTimeDuration($ds)
                                                    return
                                                        xxf:format-message(
                                                            '{0,choice,0#|0&lt;{0, number, integer} hours} {1,choice,0#|0&lt;{1, number, integer} minutes} {2,choice,0#|0&lt;{2, number, integer} seconds}',
                                                            (
                                                                hours-from-duration($d),
                                                                minutes-from-duration($d),
                                                                round(seconds-from-duration($d))
                                                            )
                                                        )
                                                else
                                                    '-'">
                                        <xf:label>ETA:</xf:label>
                                    </xf:output>
                                </xh:td>
                                <xh:td>
                                    <!-- Cancel validation -->
                                    <xf:trigger>
                                        <xf:label>Cancel</xf:label>
                                        <xf:action event="DOMActivate" type="xpath">
                                            xxf:set-session-attribute('org.orbeon.fr.import.cancel', true())
                                        </xf:action>
                                    </xf:trigger>
                                </xh:td>
                                <xh:td/>
                            </xh:tr>
                        </fr:grid>
                    </xf:group>

                    <!-- Validation results when available -->
                    <xf:group context="instance('import-validation-result')" ref=".[$validation-done]">
                        <!-- Validation results -->

                        <xf:var name="some-invalid" value="bind('invalid-count-bind') gt 0"/>

                        <!-- No invalid documents -->
                        <xf:group ref=".[not($some-invalid) and not($validation-canceled)]">
                            <fr:grid>
                                <xh:tr>
                                    <xh:td colspan="2">
                                        <xh:span class="fb-import-success">
                                            <xf:output
                                                value="
                                                    xxf:format-message(
                                                        '{0,number,integer} {0,choice,1#document|1&lt;documents}  {0,choice,1#has|1&lt;have} been validated and will be imported.',
                                                        xs:integer(processed)
                                                    )"/>
                                        </xh:span>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>
                        <!-- Warn user if there is any invalid documents -->
                        <xf:group ref=".[$some-invalid and not($validation-canceled)]">
                            <fr:grid>
                                <xh:tr>
                                    <xh:td colspan="2">
                                        <xh:span class="fb-import-warning">
                                            <xf:output
                                                value="
                                                    xxf:format-message(
                                                        'NOTE: {0,number,integer} out of {1,number,integer} {1,choice,1#document|1&lt;documents} {0,choice,1#is|1&lt;are} invalid.',
                                                        for $n in (bind('invalid-count-bind'), processed)
                                                            return xs:integer($n)
                                                    )"/>
                                        </xh:span>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>
                        <!-- Case where validation was canceled -->
                        <xf:group ref=".[$validation-canceled]">
                            <fr:grid>
                                <xh:tr>
                                    <xh:td colspan="2">
                                        <xh:span class="fb-import-warning">
                                            Validation was canceled.
                                        </xh:span>
                                        <xf:trigger>
                                            <xf:label>Start Over</xf:label>
                                            <xf:action event="DOMActivate">
                                                <!-- Clear stats -->
                                                <xf:action context="instance('import-batch-stats')">
                                                    <xf:setvalue iterate="total, processed, succeeded" ref="." value="0"/>
                                                    <xf:setvalue iterate="progress, start-time, eta"   ref="."/>
                                                </xf:action>
                                                <!-- Reload page (xf:reset would help instead!) -->
                                                <xf:load resource="import"/>
                                            </xf:action>
                                        </xf:trigger>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>
                    </xf:group>

                </fr:section>
                <fr:section id="import-section" ref="instance()/import[$validation-done and not($validation-canceled)]">
                    <xf:label>Import</xf:label>


                    <xf:var name="tab" value="."/>

                    <xf:var name="searched"  value="exists(instance('import-search-response')/@search-total)"/>
                    <xf:var name="importing" value="xs:boolean($tab/importing)"/>

                    <xf:group ref=".[$searched]">

                        <xf:var name="existing" value="xs:integer(instance('import-search-response')/@search-total)"/>

                        <xf:group ref=".[not($importing or $import-done)]">
                            <fr:grid>
                                <xh:tr>
                                    <xh:td>
                                        <xf:output
                                            value="
                                                xxf:format-message(
                                                    'There {0,choice,1#is|1&lt;are} {0,number,integer}
                                                     existing {0,choice,1#document|1&lt;documents} in the database for form
                                                     {1}/{2}.',
                                                    (
                                                        $existing,
                                                        fr:app-name(),
                                                        fr:form-name()
                                                    )
                                                )"/>
                                    </xh:td>
                                </xh:tr>
                                <xh:tr>
                                    <xh:td>
                                        <xf:select1 appearance="full" ref="bind('keep-existing-records-bind')[$existing gt 0]">
                                            <xf:label>Existing database records</xf:label>
                                            <xf:item>
                                                <xf:label>Keep</xf:label>
                                                <xf:value>true</xf:value>
                                            </xf:item>
                                            <xf:item>
                                                <xf:label>Delete</xf:label>
                                                <xf:value>false</xf:value>
                                            </xf:item>
                                        </xf:select1>
                                    </xh:td>
                                    <xh:td>
                                        <xf:select1
                                            appearance="full"
                                            ref="
                                                bind('import-invalid-data-bind')[
                                                    $allow-invalid-documents and
                                                    bind('invalid-count-bind') gt 0
                                                ]">
                                            <xf:label>Invalid data</xf:label>
                                            <xf:item>
                                                <xf:label>Skip</xf:label>
                                                <xf:value>false</xf:value>
                                            </xf:item>
                                            <xf:item>
                                                <xf:label>Keep</xf:label>
                                                <xf:value>true</xf:value>
                                            </xf:item>
                                        </xf:select1>
                                    </xh:td>
                                </xh:tr>
                                <xh:tr>
                                    <xh:td>
                                        <xf:trigger>
                                            <xf:label>Import</xf:label>
                                            <!-- Start import -->
                                            <xf:action event="DOMActivate">

                                                <xf:send
                                                    if="bind('keep-existing-records-bind') = true()"
                                                    submission="import-import-submission"/>
                                                <xf:send
                                                    if="bind('keep-existing-records-bind') = false()"
                                                    submission="import-delete-data-submission"/>

                                            </xf:action>
                                        </xf:trigger>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>

                        <xf:group ref=".[$importing]">
                            <fr:grid>
                                <xh:tr>
                                    <xh:td>
                                        <xf:group>
                                            <xf:label>Importing:</xf:label>
                                            <xh:div class="progress progress-striped">
                                                <xh:div
                                                    class="bar"
                                                    style="width: {
                                                        format-number(
                                                            if (instance('import-batch-stats')/total != 0) then
                                                                xs:decimal(instance('import-batch-stats')/processed) div
                                                                        xs:decimal(instance('import-batch-stats')/total)
                                                             else
                                                                0,
                                                            '###%'
                                                        )
                                                }"/>
                                            </xh:div>
                                        </xf:group>
                                    </xh:td>
                                    <xh:td>
                                        <xf:output
                                            value="
                                                for $ds in instance('import-batch-stats')/eta
                                                return
                                                    if ($ds castable as xs:dayTimeDuration) then
                                                        for $d in xs:dayTimeDuration($ds)
                                                        return
                                                            xxf:format-message(
                                                                '{0,choice,0#|0&lt;{0, number, integer} hours} {1,choice,0#|0&lt;{1, number, integer} minutes} {2,choice,0#|0&lt;{2, number, integer} seconds}',
                                                                (
                                                                    hours-from-duration($d),
                                                                    minutes-from-duration($d),
                                                                    round(seconds-from-duration($d))
                                                                )
                                                            )
                                                    else
                                                        '-'">
                                            <xf:label>ETA:</xf:label>
                                        </xf:output>
                                    </xh:td>
                                    <xh:td>
                                        <!-- Cancel import -->
                                        <xf:trigger>
                                            <xf:label>Cancel</xf:label>
                                            <xf:action event="DOMActivate" type="xpath">
                                                xxf:set-session-attribute('org.orbeon.fr.import.cancel', true())
                                            </xf:action>
                                        </xf:trigger>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>

                        <!-- Import results when available -->
                        <xf:group context="instance('import-result')" ref=".[$import-done]">
                            <!-- Validation results -->

                            <xf:var name="skipped" value="xs:integer(processed) - succeeded"/>

                            <xf:group ref=".[not($import-canceled)]">
                                <fr:grid>
                                    <xh:tr>
                                        <xh:td colspan="2">
                                            <xh:span class="fb-import-success">
                                                <xf:output
                                                    value="
                                                        xxf:format-message(
                                                            'Import of {0,number,integer} {0,choice,1#document|1&lt;documents} is complete.
                                                             {1,number,integer} invalid {1,choice,1#document was|1&lt;documents were} skipped.',
                                                            (
                                                                xs:integer(succeeded),
                                                                $skipped
                                                            )
                                                        )"/>
                                            </xh:span>
                                        </xh:td>
                                    </xh:tr>
                                </fr:grid>
                            </xf:group>
                            <!-- Case where validation was canceled -->
                            <xf:group ref=".[$import-canceled]">
                                <fr:grid>
                                    <xh:tr>
                                        <xh:td colspan="2">
                                            <xh:span class="fb-import-warning">
                                                Import was canceled.
                                            </xh:span>
                                            <xf:trigger>
                                                <xf:label>Start Over</xf:label>
                                                <xf:action event="DOMActivate">
                                                    <!-- Clear stats -->
                                                    <xf:action context="instance('import-batch-stats')">
                                                        <xf:setvalue iterate="total, processed, succeeded" ref="." value="0"/>
                                                        <xf:setvalue iterate="progress, start-time, eta"   ref="."/>
                                                    </xf:action>
                                                    <!-- Reload page (xf:reset would help instead!) -->
                                                    <xf:load resource="import"/>
                                                </xf:action>
                                            </xf:trigger>
                                        </xh:td>
                                    </xh:tr>
                                </fr:grid>
                            </xf:group>

                        </xf:group>
                    </xf:group>
                </fr:section>

                <!--<fr:xforms-inspector/>-->

            </fr:body>
            <fr:buttons>
                <fr:close-button/>
            </fr:buttons>
        </fr:view>
    </xh:body>
</xh:html>